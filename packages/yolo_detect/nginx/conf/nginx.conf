#user       www www;  ## Default: nobody
# 启动进程
worker_processes  5;  ## Default: 1
# 全局错误日志及PID文件
error_log  logs/error.log;
pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

# 工作模式及连接数上限
events {
  worker_connections  4096;  ## Default: 1024
}

# 设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
  #include    conf/mime.types;
  #include    /etc/nginx/proxy.conf;
  #include    /etc/nginx/fastcgi.conf;
  #index    index.html index.htm index.php;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  # 设定日志格式
  # access_log   logs/access.log  main;
  #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
  #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
  sendfile     on;
  tcp_nopush   on;
  #将tcp_nopush设置为on用于防止网络阻塞
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts
  client_max_body_size 200m;

  # 设定负载均衡的服务器列表
  upstream aiserver{
      # 同步docker-compose.yml中的多张图片人脸检测服务节点
      # 拓展需添加: server detect*:8080;
     # server localhost:8080;

  }


  server { # simple reverse-proxy
    #侦听80端口
    listen       80;
    server_name  localhost;
    access_log   logs/localhost.access.log  main;

    #默认请求
    location / {
      proxy_pass      http://aiserver;
    }
  }


}
